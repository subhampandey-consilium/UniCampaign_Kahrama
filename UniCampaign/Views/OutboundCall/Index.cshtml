@using UniCampaignE.Web.Localization
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_UniCampaignLayout.cshtml";
}
@section page_content{
    <div class="content-heading">
        Outbound Call Report
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-flat panel-primary">
                <div class="panel-heading">
                    <div class="panel-title">
                        @*@AuditTrail.AUDIT_TRAIL_TITLE*@
                        Outbound Call Report
                    </div>
                </div>
                <div class="panel-body">
                    <div class="form-inline mb-lg pull-right">
                        <div class="form-group">
                            @*<input type="text" id="call_Result" placeholder="Call Result" class="form-control" />*@

                            @Html.DropDownList("call_Result", new List<SelectListItem>
                               {
                                    new SelectListItem{ Text="Select Call Result", Value = "0",Selected=true },
                                    new SelectListItem{ Text="Pending", Value = "1" },
                                    new SelectListItem{ Text="ErrorConditionWhileDialing", Value = "2" },
                                    new SelectListItem{ Text="NumberNotInService", Value = "3" },
                                    new SelectListItem{ Text="NoRingbackFromNetwork", Value = "4" },
                                    new SelectListItem{ Text="OperatorIntercept", Value = "5" },
                                    new SelectListItem{ Text="NoDialTone", Value = "6" },
                                    new SelectListItem{ Text="NumberInvalid", Value = "7" },
                                    new SelectListItem{ Text="NoAnswer", Value = "8" },
                                    new SelectListItem{ Text="NumberBusy", Value = "9" },
                                    new SelectListItem{ Text="AnsweredSuccess", Value = "10" },

                                    new SelectListItem{ Text="FaxMachine", Value = "11" },
                                    new SelectListItem{ Text="AnsweringMachine", Value = "12" },
                                    new SelectListItem{ Text="DialingStopped", Value = "13" },
                                    new SelectListItem{ Text="CallbackRequested", Value = "14" },
                                    new SelectListItem{ Text="CallbackMachine", Value = "15" },
                                    new SelectListItem{ Text="AbandonedByDialer", Value = "16" },
                                    new SelectListItem{ Text="FailedToReserveAgent", Value = "17" },
                                    new SelectListItem{ Text="SkippedOrRejected", Value = "18" },
                                    new SelectListItem{ Text="SkippedOrRejectedWithClose", Value = "19" },
                                    new SelectListItem{ Text="AbandonedToIVR", Value = "20" },

                                    new SelectListItem{ Text="CallDroppedWithinAbandonTime", Value = "21" },
                                    new SelectListItem{ Text="NetworkAnsweringMachine", Value = "22" },
                                    new SelectListItem{ Text="WrongNumber", Value = "23" },
                                    new SelectListItem{ Text="WrongPersonReached", Value = "24" },
                                    new SelectListItem{ Text="FlushedByDialer", Value = "25" },
                                    new SelectListItem{ Text="DNC", Value = "26" },
                                    new SelectListItem{ Text="DisconnectedByNetwork", Value = "27" },
                                    new SelectListItem{ Text="LowVoiceOrDeadAir", Value = "28" },
                                 }, new { @class = "form-control" })

                            

                        </div>
                        <div id="startTimePicker" class="input-group date">
                            <input type="text" id="start_date" placeholder="@AuditTrail.AUDIT_START_DATE_PLACEHOLDER" class="form-control" />
                            <span class="input-group-addon">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                        <div id="endTimePicker" class="input-group date">
                            <input type="text" id="end_date" placeholder="@AuditTrail.AUDIT_END_DATE_PLACEHOLDER" class="form-control" />
                            <span class="input-group-addon">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                        <div class="form-group">
                            <button class="btn btn-primary" id="btn_filter">@AuditTrail.FILTER_BUTTON_TEXT</button>
                            <button class="btn btn-default" id="btn_reset">@AuditTrail.RESET_BUTTON_TEXT</button>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="table-responsive">
                        <table id="grid" class="table table-striped table-bordered table-condensed" data-source="@Url.RouteUrl(new {area = "", controller = "OutboundCall", action = "GetOutboundCallReport" })"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section page_scripts {
    <script type="text/javascript">
        $('#btn_filter').on('click', function (e) {
            if ($('#start_date').val() == '') {
                //$('#start_date').addErrorTooltip('REQUIRED_FIELD', 'bottom');
                return;
            }
            if ($('#end_date').val() == '') {
                //$('#end_date').addErrorTooltip('REQUIRED_FIELD', 'bottom');
                return;
            }
            if ($('#call_Result').val() == '0') {
                return;
            }

            if (!moment($('#start_date').val()).isBefore(moment($('#end_date').val()))) {
                //$('#start_date').addErrorTooltip('should be less than end date', 'bottom');
                return;
            }
            //if ($('#startTimePicker').hasClass('has-error') || $('#endTimePicker').hasClass('has-error'))
            //{
            //    return;
            //}
            grid.reload({
                startDate: $('#start_date').val(),
                endDate: $('#end_date').val(),
                callResult: $('#call_Result').val()
            });
        });
        $('#btn_reset').on('click', function (e) {
            $('#start_date').val('');
            $('#end_date').val('');
            $('#call_Result').val('0');
            //$('#start_date').removeErrorTooltip();
            //$('#end_date').removeErrorTooltip();
            grid.reload({
                startDate: $('#start_date').val(),
                endDate: $('#end_date').val(),
                callResult: $('#call_Result').val()
            });
        });
        $(document).ready(function () {
            grid = $("#grid").grid({
                uiLibrary: "bootstrap",
                iconsLibrary: 'fontawesome',
                dataKey: "Action",
                notFoundText: "@GridComman.GRID_NO_RECORD_FOUND",
                allowScrolling: true,                
                scrollSettings: { enableColumnScrolling: true, enableRowScrolling: true, height: 220 },
                uiLibrary: "bootstrap",
                columns: [
                    { field: "DialerName", title: 'Dialer Name',width: 100 },
                    { field: "DateTime", title: 'DateTime', width: 100 },
                    { field: "CampaignName", title: 'Campaign Name', width: 150 },
                    { field: "TimeZone", title: 'TimeZone', width: 100 },
                    { field: "SkillGroupName", title: 'Skill Group Name', width: 150 },
                    { field: "CustomerName", title: 'Customer Name', width: 150 },

                    { field: "CustomerCallbackPhone", title: 'Customer Callback Phone', width: 100 },
                    { field: "CallbackDateTime", title: 'Callback DateTime', width: 150 },
                    { field: "WrapupName", title: 'Wrapup Name', width: 100 },
                    { field: "ReservationCallDuration", title: 'Reservation CallDuration', width: 150 },
                    { field: "PreviewTime", title: 'PreviewTime', width: 100 },
                    { field: "DialerCallDuration", title: 'Dialer CallDuration', width: 100 },

                    { field: "TCDCallDuration", title: 'TCD CallDuration', width: 100 },
                    { field: "MRDName", title: 'MRD Name', width: 100 },
                    { field: "AgentName", title: 'Agent Name', width: 100 },
                    { field: "NetworkTime", title: 'Network Time', width: 100 },
                    { field: "RingTime", title: 'Ring Time', width: 100 },
                    { field: "DelayTime", title: 'Delay Time', width: 100 },

                    { field: "TimeToAband", title: 'Time To Aband', width: 100 },
                    { field: "HoldTime", title: 'HoldTime', width: 100 },
                    { field: "WorkTime", title: 'WorkTime', width: 100 },
                    { field: "AnsweredWithinServiceLevel", title: 'Answered With in Service Level', width: 100 },
                    { field: "CallReferenceID", title: 'Call ReferenceID', width: 250 },
                    { field: "CallDisposition", title: 'Call Disposition', width: 100 },

                    { field: "CallDispositionFlag", title: 'Call Disposition Flag', width: 100 },
                    { field: "CallResult", title: 'CallResult', width: 100 },
                    { field: "CallResultDetail", title: 'CallResult Detail', width: 100 },
                    { field: "PeripheralCallKey", title: 'Peripheral CallKey', width: 100 },
                    { field: "SIPResponseCode", title: 'SIP Response Code', width: 200 },
                    { field: "CallResultName", title: 'Call ResultName', width: 300 },
                ],
                pager: { enable: true, limit: 10, sizes: [2, 5, 10, 20, 50] }
            });
        });
        var pickerSettings =
            {
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-chevron-up",
                    down: "fa fa-chevron-down",
                    clear: 'fa fa-trash',
                    close: 'fa fa-times'
                },
                sideBySide: true,
                format: 'YYYY-MM-DD HH:mm',
                showClear: true,
                showClose: true,
                useCurrent: true,
                keepInvalid: false,
                useStrict: true,
                toolbarPlacement: 'bottom',
                widgetPositioning: {
                    horizontal: 'auto',
                    vertical: 'bottom'
                }
            };
        $('#startTimePicker').datetimepicker(pickerSettings).on('dp.error', function (e) {
            //$('#start_date').addErrorTooltip("Invalid date or time", 'bottom');
        }).on('dp.change', function (e) {
            //$('#start_date').removeErrorTooltip();
            //$('#end_date').removeErrorTooltip();
        });
        $('#endTimePicker').datetimepicker(pickerSettings).on('dp.error', function (e) {
            //$('#end_date').addErrorTooltip("Invalid date or time", 'bottom');
        }).on('dp.change', function (e) {
            //$('#end_date').removeErrorTooltip();
            //$('#start_date').removeErrorTooltip();
        });

    </script>
}

