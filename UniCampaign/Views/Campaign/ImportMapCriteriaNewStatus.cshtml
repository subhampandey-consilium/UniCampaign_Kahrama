@using UniCampaignE.Web.Localization
@model UniCampaignE.Core.Models.API.Campaign
<style>
    .swal-wide {
        width: 800px !important;
        height: 400px !important;
    }
</style>

<div class="modal-dialog modal-xl map-stats" id="advanced_campaign_editor">
    <div class="modal-content">
        <div class="modal-header bg-primary-dark">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">Contact Lists assigned to @Model.Name</h4>
        </div>
        <div class="modal-body">
            <div class="row">
                <div class="col-lg-12" role="tabpanel">

                    <ul class="nav nav-tabs" role="tablist">
                        <li class="active">
                            <a href="#statusmain" data-toggle="tab">@UniCampaignE.Web.Localization.Campaign.MAIN_TAB</a>
                        </li>
                        <li>
                            <a href="#thresholdprocess" data-toggle="tab">Threshold List Under Processing</a>
                        </li>
                    </ul>

                    <div class="tab-content">
                        <div class="tab-pane active b0" role="tabpanel" id="statusmain">
                            <div class="col-lg-12 pl0">
                                <div class="panel panel-primary">
                                    <div class="panel-body">
                                        <div class="row">
                                            <div class="col-xs-4 pull-left">
                                                <a id="btnDeleteContactList" class="btn btn-danger">
                                                  <i class="fa fa-trash-o"></i> &nbsp;
                                                    <span>Delete</span>
                                                </a>
                                            </div>
                                            <div class="col-xs-4 pull-right">
                                                <input class="form-control seach-box" type="text" placeholder="Contact List Name" aria-label="Search" id="IdSearchText">
                                                <button id="btnSearchContactList" class="btn btn-primary btn-search">Search</button>
                                                <button id="btnResetContactList" class="btn btn-danger btn-reset">Reset</button>

                                            </div>
                                        </div>

                                        <div class="table-responsive">
                                            <table id="mapCriteria_grid" data-source="@Url.Action(nameof(UniCampaignE.Web.Controllers.CampaignController.GetListWiseStatus), new { controller = "Campaign", area = "", campaignId = Model.GetUniqueId() })" class="table table-striped table-bordered table-condensed"></table>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                        </div>

                        <div class="tab-pane" role="tabpanel" id="thresholdprocess">
                            <div class="col-lg-12 pl0">
                                <div class="panel panel-primary">
                                    <div class="panel-body">
                                        <div class="table-responsive">
                                            <table id="mapCriteria_grid1" data-source="@Url.Action(nameof(UniCampaignE.Web.Controllers.CampaignController.GetListWiseStatusThreshold), new { controller = "Campaign", area = "", campaignId = Model.GetUniqueId() })" class="table table-striped table-bordered table-condensed"></table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer"></div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        $("#btnDeleteContactList").click(function (e) {
            debugger;
            var listId = mapCriteriaGrid.getSelections();
            if (listId == null || listId.length == 0) {
                showGlobalNotification('error', 'Please select at least one contact list');
                return;
            }
            var campaignId = @Model.GetUniqueId();
            if (confirm("Do you want to delete selected contact list ?")) {
                $.ajax({
                    type: "POST",
                    url: '@Url.RouteUrl(new { area="",controller="Campaign",action=nameof(UniCampaignE.Web.Controllers.CampaignController.DeleteAllContactList) })',
                    data: { campaignId: campaignId, listId: listId },
                    beforeSend: function () {
                        $('#loader').show();
                    },
                    success: function (response) {
                        $('#loader').hide();
                        showGlobalNotification('success', response);
                        mapCriteriaGrid.reload();
                },
                //error: function () {
                //    $('#loader').hide();
                //    showGlobalNotification('error', 'Failed to delete all contact list');
                //}
            });
            } else {

            }
        });
    });
    var mapCriteriaGrid;
    CreatemapCriteriaGrid();
    var mapCriteriaGrid1;
  CreatemapCriteriaGrid1();

    function CreatemapCriteriaGrid1() {
        mapCriteriaGrid1 = $('#mapCriteria_grid1').grid(
           {
                primaryKey: 'Idx',
                dataSource:"@Url.Action(nameof(UniCampaignE.Web.Controllers.CampaignController.GetListWiseStatusThreshold), new { controller = "Campaign", area = "", campaignId = Model.GetUniqueId() })",
                iconsLibrary: 'fontawesome',
                columns: [
                    { field: 'Idx', title: 'Index', hidden: true },
                    { field: 'Id', title: 'Id', hidden: true },
                    { field: 'ListName', title: 'Contact List' },
                ],
                uiLibrary: "bootstrap",
                notFoundText: "@GridComman.GRID_NO_RECORD_FOUND",
                pager: { enable: true, limit: 5, sizes: [5, 10] }
            });

        mapCriteriaGrid1.on('rowDataBound', function (e, $row, id, record) {
            if (record.IsCompleted || record.IsExhausted) {
                $row.css('background-color', '#d4d4d4');
            } else {
                $row.css('background-color', 'transparent');
            }
        });

        mapCriteriaGrid1.on('pageChanging', function (e, newPage) {
            mapCriteriaGrid1.clear();
        });
    }

    $("#mapCriteria_grid1 [data-role='page-refresh']").click(() => {
        mapCriteriaGrid1.clear();
        mapCriteriaGrid1.reload();
    });

    function CreatemapCriteriaGrid() {
        mapCriteriaGrid = $('#mapCriteria_grid').grid(
           {
                primaryKey: 'Id',
                dataSource:"@Url.Action(nameof(UniCampaignE.Web.Controllers.CampaignController.GetListWiseStatus), new { controller = "Campaign", area = "", campaignId = Model.GetUniqueId() })",
                iconsLibrary: 'fontawesome',
                selectionMethod: 'checkbox',
                selectionType: 'multiple',
                columns: [
                    { field: 'Idx', title: 'Index', hidden: true },
                    { field: 'Id', title: 'Id', hidden: true },
                    { field: 'ListName', title: 'Contact List' },
                    { field: 'TotalRecords', title: 'Total Records', width: 80, align: 'center' },
                    { field: 'ImportedRecords', title: 'Imported Records', width: 80, align: 'center' },
                    { field: 'ExcludedRecords', title: 'Excluded Records', width: 80, align: 'center' },
                    { field: 'DuplicateRecords', title: 'Duplicate Records', width: 80, align: 'center' },
                    { field: 'InvalidRecords', title: 'Invalid Records', width: 80, align: 'center' },
                    {
                        field: "DialingPriority", title: 'Priority', renderer: function (val, record, $cell, $displayEl, id) {
                            $displayEl.html('<div class="list-priority-input-group form-inline"><input type="text" class ="form-control form-control-sm input-sm" ><button class ="btn-link list-priority-change">Change</button></div>');
                            $('input', $displayEl).val(val);
                            $('input', $displayEl).attr('data-current-listId', record.Id);
                            $('input', $displayEl).attr('data-current-campaignId', record.CampaignId);
                            $('input', $displayEl).attr('data-current-listvalue', val);

                            if (record.IsCompleted) {
                                $displayEl.html('<div class="list-priority-input-group form-inline"><input type="text" class ="form-control form-control-sm input-sm" ></div>');
                                $('input', $displayEl).val(val);
                                $('input', $displayEl).attr('data-current-listId', record.Id);
                                $('input', $displayEl).attr('data-current-campaignId', record.CampaignId);
                                $('input', $displayEl).attr('data-current-listvalue', val);
                            }

                            if (record.IsExhausted) {
                                $displayEl.html('<div class="list-priority-input-group form-inline"><input type="text" class ="form-control form-control-sm input-sm" ></div>');
                                $('input', $displayEl).val(val);
                                $('input', $displayEl).attr('data-current-listId', record.Id);
                                $('input', $displayEl).attr('data-current-campaignId', record.CampaignId);
                                $('input', $displayEl).attr('data-current-listvalue', val);
                            }
                        }
                    },
                    {
                        field: "StartStop", title: "Turn OFF/ON", width: 65,
                        align: 'center',
                        renderer: function (val, record, $displayEl) {
                            $displayEl.html('<a data-ajax="true" data-ajax-loading="#loader" data-ajax-failure="globalAjaxErrorHandler" data-ajax-success="stopSuccessHandler" data-ajax-method="POST" href="@Url.RouteUrl(new { area="",controller="Campaign",action=nameof(UniCampaignE.Web.Controllers.CampaignController.StopContactList) })' + '?campaignId=' + record.CampaignId + '&listId=' + record.Id + ' "  id="stopbutton_{Id}" ><i class="text-danger fa fa-pause" style="font-size:20px" data-toggle="tooltip" data-placement="top" title="Click to Stop"></i></a>');
                            if (record.IsStopped) {
                                $displayEl.html('<a data-ajax="true" data-ajax-loading="#loader" data-ajax-failure="globalAjaxErrorHandler" data-ajax-success="stopSuccessHandler" data-ajax-method="POST" href="@Url.RouteUrl(new { area="",controller="Campaign",action=nameof(UniCampaignE.Web.Controllers.CampaignController.StartContactList) })' + '?campaignId=' + record.CampaignId + '&listId=' + record.Id + '" id="Resume_{Id}" ><i class="text-success fa fa-play-circle" style="font-size:20px"  data-toggle="tooltip" data-placement="top" title="Click to Start"></i></a>');
                            } else if (record.IsCompleted || record.IsExhausted) {
                                $displayEl.html('');
                            }
                        }
                    }
                ],
                detailTemplate: '<div><table/></div>',
                uiLibrary: "bootstrap",
                notFoundText: "@GridComman.GRID_NO_RECORD_FOUND",
                pager: { enable: true, limit: 5, sizes: [5, 10] }
            });

        mapCriteriaGrid.on('rowDataBound', function (e, $row, id, record) {
            if (record.IsCompleted || record.IsExhausted) {
                $row.css('background-color', '#d4d4d4');
            } else {
                $row.css('background-color', 'transparent');
            }
        });

        mapCriteriaGrid.on('pageChanging', function (e, newPage) {
            mapCriteriaGrid.clear();
        });

        mapCriteriaGrid.on('detailExpand', function (e, $detailWrapper, id) {
        var currentRecord = mapCriteriaGrid.getById(id);
        if (currentRecord == undefined || currentRecord == null) {
            return;
        }

        var criteriaGrid = $detailWrapper.find('table').grid(
            {
                dataSource: '@Url.Action(nameof(UniCampaignE.Web.Controllers.CampaignController.GetMapWiseStatus),new { area="",controller="Campaign" })',
                params: { listId: currentRecord.Id, CampaignId: currentRecord.CampaignId, priority: currentRecord.DialingPriority },
                primaryKey: 'MapId',
                iconsLibrary: 'fontawesome',
                columns: [
                    { field: "Id", title: "List Id", hidden: true },
                    { field: "ListName", title: "List Name", hidden: true },
                    { field: "FilteredBy", title: "Filtered By" },
                    { field: "CampaignId", title: "CampaignId", hidden: true, align: 'center' },
                    { field: "MapId", title: "MapId", hidden: true, align: 'center' },
                    { field: "TotalRecords", title: "Total Records", align: 'center', width: 80 },
                    { field: "ImportedRecords", title: "Imported Records", align: 'center', width: 80 },
                    { field: "ExcludedRecords", title: "Excluded Records", align: 'center', width: 80 },
                    { field: "DuplicateRecords", title: "Duplicate Records", align: 'center', width: 80 },
                    { field: "InvalidRecords", title: "Invalid Records", align: 'center', width: 80 },
                    {
                        field: 'Target', title: 'Threshold', renderer: function (val, record, $cell, $displayEl, id) {

                            if (record.TargetEnabled) {
                                $displayEl.text(record.Target + '' + record.TargetType)
                            }

                        }, align: 'center', width: 80
                    },
                    { field: "Status", title: "Status", width: 100 },
                    {
                        field: "DialingPriority", hidden: true, title: 'Priority', renderer: function (val, record, $cell, $displayEl, id) {
                            $displayEl.html('<div class="form-inline map-priority-input-group"><input type="text" class ="form-control form-control-sm input-sm" ><button class ="btn-link map-priority-change">Change</button></div>');
                            $('input', $displayEl).val(val);
                            $('input', $displayEl).attr('data-current-map', id);
                            $('input', $displayEl).attr('data-current-campaign', record.CampaignId);
                            $('input', $displayEl).attr('data-current-value', val);
                        }
                    },
                    { field: "CreatedOn", title: "Assigned On", width: 120 },
                    {
                        field: "StartStop", title: "Turn OFF/ON", hidden: true, width: 65,
                        align: 'center',
                        renderer: function (val, record, $displayEl) {
                            if (val == "Start") {
                                $displayEl.html(' <a data-ajax="true" data-ajax-failure="globalAjaxErrorHandler" data-ajax-success="stopSuccessHandler" data-ajax-method="POST" href="@Url.RouteUrl(new { area="",controller="Campaign",action=nameof(UniCampaignE.Web.Controllers.CampaignController.StartCallingList)})' + '?mapid=' + record.MapId + '&name=' + record.ListName + '" id="Resume_{Id}"  ><i class="fa fa-play-circle text-success" style="font-size:20px" data-toggle="tooltip" data-placement="top" title="Click to start"></i></a>');
                            }
                            else {
                                $displayEl.html('<a data-ajax="true" data-ajax-failure="globalAjaxErrorHandler" data-ajax-success="stopSuccessHandler" data-ajax-method="POST" href="@Url.RouteUrl(new { area="",controller="Campaign",action=nameof(UniCampaignE.Web.Controllers.CampaignController.StopCallingList)})' + '?mapid=' + record.MapId + '&name=' + record.ListName + ' "  id="stopbutton_{Id}" ><i class="fa fa-pause text-danger" style="font-size:20px" data-toggle="tooltip" data-placement="top" title="Click to Stop"></i></a>');
                            }
                        }
                     },
                    { title: "", width: 80, priority: 3, field: "", tmpl: '<a  target="_blank" href="@Url.RouteUrl(new { area = "", controller = "Campaign", action = nameof(UniCampaignE.Web.Controllers.CampaignController.ImportDetails), id = Model.GetUniqueId(), name = Model.Name})&MapId={MapId}&ListName={ListName}"><small>Details</small></a>' },
                ],
                uiLibrary: "bootstrap",
                notFoundText: "@GridComman.GRID_NO_RECORD_FOUND",
                pager: { enable: true, limit: 5, sizes: [5, 10] }
            });
        });

        mapCriteriaGrid.on('detailCollapse', function (e, $detailWrapper, id) {
             $detailWrapper.find('table').grid('destroy', true, true);
        });
    }

    $("#mapCriteria_grid [data-role='page-refresh']").click(() => {
        mapCriteriaGrid.clear();
        mapCriteriaGrid.reload();
    });

    $('#btnSearchContactList').click(() => {
        var InputElement = document.getElementById("IdSearchText");
        var input = document.getElementById("IdSearchText").value.trim();
        if (!input) {
            $(InputElement).addClass("CustomError");
            setTimeout(function () {
                $(InputElement).removeClass("CustomError");
            }, 600); return;
        }

        mapCriteriaGrid.clear();
        mapCriteriaGrid.reload({ page: 1, searchString: input });
        $("#btnSearchContactList").css('right', '20%');
        $("#btnResetContactList").show();
    });

    $('#btnResetContactList').click(() => {
        document.getElementById("IdSearchText").value = '';
        mapCriteriaGrid.clear();
        mapCriteriaGrid.reload({ page: 1, searchString: null });
        $("#btnSearchContactList").show();
        $("#btnSearchContactList").css('right', '4%');
        $("#btnResetContactList").hide();
     });

    $('#IdSearchText').keypress((e) => {
        if (e.which == 13) {
            $('#btnSearchContactList').click();
        }
    });

    function stopSuccessHandler(response) {
        hideGlobalNotification();
        showGlobalNotification('success', response.Message);
        mapCriteriaGrid.clear();
        mapCriteriaGrid.reload();
    }

  $(document).ready(function (e) {
    $('#advanced_campaign_editor').on('click', '#statusmain', function (e) {
      CreatemapCriteriaGrid();
    });

    $('#advanced_campaign_editor').on('click', '#thresholdprocess', function (e) {
      CreatemapCriteriaGrid1();
    });

    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
      var target = $(e.target).attr("href") // activated tab
      mapCriteriaGrid.clear();
      mapCriteriaGrid.reload();
      mapCriteriaGrid1.clear();
      mapCriteriaGrid1.reload();
    });
  });

</script>
