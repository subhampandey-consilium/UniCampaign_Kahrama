@using UniCampaignE.Web.Localization
@using UniCampaignE.Web.HelperLib
@model UniCampaignE.Core.Models.PlainTextContactList
<div class="modal-dialog">
    <form id="plain_text_contact_list_form" data-header-url="@Url.Action(nameof(UniCampaignE.Web.Controllers.ContactListController.GetHeaders), new { controller = "ContactList", area = "" })" method="post" action="@Url.Action(nameof(UniCampaignE.Web.Controllers.ContactListController.Save), new { controller = "ContactList", area = "" })">
        <div class="modal-content">
            <div class="modal-header bg-primary-dark">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">@ViewBag.ModalTitle</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal" role="form" id="step_one">
                    @Html.Partial("EditorCommon", Model)
                    <div class="form-group">
                        <label class="control-label col-xs-4">Contains Headers</label>
                        <div class="col-xs-8 col-lg-7">
                            @Html.HiddenFor(mod => mod.ContainsHeaders, new { id = "contact_list_contains_headers" })
                            <div class="c-checkbox checkbox-inline">
                                <label>
                                    <input type="checkbox" class="header-check" data-target="#contact_list_contains_headers" @{var hasHeaders = Model != null && Model.ContainsHeaders ? "checked='checked'" : string.Empty; @hasHeaders  } />
                                    <span class="fa fa-check"></span>Yes
                                </label>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-xs-4">Delimiter<span class="error inline"></span></label>
                        <div class="col-xs-8 col-lg-7">
                            @Html.DropDownListFor(mod => mod.Delimiter, DropDownHelper.GetConstants(typeof(UniCampaignE.Core.Constants.API.Delimiter)), new { @class = "form-control", id = "contact_list_delimiter" })
                        </div>
                    </div>
                    @*@if (ViewBag.SourceType == UniCampaignE.Core.Constants.DataSourceType.LocalDirectory)
        {*@
                    <div class="form-group">
                        <label class="control-label col-xs-4">File Mode<span class="error inline"></span></label>
                        <div class="col-xs-8 col-lg-7" id="file_mode">
                            <div class="c-radio radio-inline">
                                <label>
                                    <input type="radio" class="radio-dnc" name="file_mode" value="1" data-target="#file_mode" />
                                    <span class="fa fa-check"></span>Upload file
                                </label>
                            </div>
                            <div class="c-radio radio-inline">
                                <label>
                                    <input type="radio" class="radio-dnc" name="file_mode" value="2" data-target="#file_mode" />
                                    <span class="fa fa-check"></span>File Path
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group upload-file hidden">
                        <label class="control-label col-xs-4">File<span class="error inline">*</span></label>
                        <div class="col-xs-8 col-lg-7">

                            @*@Html.Hidden(nameof(Model.FilePath), Model?.FilePath, new { id = "contact_list_file_path" })*@
                            <input type="file" id="file_input" name="file" />
                            <span class="help-block inline" id="file_upload_error"></span><span class="btn btn-sm btn-link hidden" id="btn_remove_file">Remove</span>
                        </div>
                        <div class="clearfix"></div>
                        <div class="progress hidden" id="file_upload_progress">
                            <div class="progress-bar progress-bar-success" role="progressbar"></div>
                        </div>
                    </div>
                    @*}
        else
        {*@
                    <div class="form-group file-path hidden">
                        <label class="control-label col-xs-4">File Path <span class="error inline">*</span></label>
                        <div class="col-xs-8 col-lg-7">
                            @Html.TextBoxFor(mod => mod.FilePath, new { @class = "form-control", id = "contact_list_file_path" })
                        </div>
                    </div>
                    @*}*@
                </div>
                <div class="hidden p-lg" id="step_two">
                    <div class="form-group">
                        <label class="control-label col-xs-2 pl0">Sort By</label>
                        <div class="col-xs-5">
                            @Html.DropDownListFor(mod => mod.SortBy, new List<SelectListItem>(), new { @class = "form-control", id = "contact_list_sort_by", data_selected_field = Model?.SortBy })
                        </div>
                        <div class="col-xs-4">
                            @Html.DropDownListFor(mod => mod.SortDirection, DropDownHelper.GetConstants(typeof(UniCampaignE.Core.Models.OrderDirection)), new { @class = "form-control", id = "contact_list_sort_direction" })
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Filter Criteria</label>
                        @Html.Partial("EditorContactFilter", Model?.FilterCriteria ?? new UniCampaignE.Core.Models.ContactFilter() { OperatorType = UniCampaignE.Core.Models.LogicalOperator.None })
                    </div>
                </div>
                <div class="clearfix"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">@Comman.CANCEL_BUTTON_TEXT</button>
                <input type="button" class="btn btn-default hidden" id="btn_prev" value="@Comman.BUTTON_PREVIOUS" />
                <input type="button" class="btn btn-default" id="btn_next" value="@Comman.BUTTON_NEXT" @{ if(Model != null && Model.SourceType == 7) {
             @:disabled="disabled"
        } } />
                <input type="submit" class="btn btn-primary hidden" id="btn_save" value="@Comman.SAVE_BUTTON_TEXT" />
            </div>
        </div>
    </form>
</div>

@if (ViewBag.SourceType == UniCampaignE.Core.Constants.DataSourceType.LocalDirectory)
{
    <script src="~/Scripts/blueimp-file-upload/jquery.ui.widget.js"></script>
    <script src="~/Scripts/blueimp-file-upload/jquery.iframe-transport.js"></script>
    <script src="~/Scripts/blueimp-file-upload/jquery.fileupload.js"></script>
    <script src="~/Scripts/blueimp-file-upload/jquery.fileupload-ui.js"></script>
    <script src="~/Scripts/blueimp-file-upload/jquery.fileupload-process.js"></script>
    <script src="~/Scripts/blueimp-file-upload/jquery.fileupload-validate.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var uploadUrl = '@Url.Action("UploadFile", "ContactList")';
            var fileUploadOptions = {
                url: uploadUrl,
                autoUpload: true,
                dataType: false,
                acceptFileTypes: /(\.|\/)(txt|csv|log)$/i,
                maxFileSize: 30000000,
                maxNumberOfFiles: 1,
                formGroupEelement: $('#file_input').parentsUntil('.form-group').parent(),
                progressElement: $('#file_input').parentsUntil('.form-group').parent().find('.progress').first(),
                feedbackElement: $('#file_input').parentsUntil('.form-group').parent().find('.help-block').first(),
                removeFileElement: $('#btn_remove_file'),
                processstart: function (e, data) {
                    $(data.progressElement).removeClass('hidden');
                    $(data.feedbackElement).text('');
                    $(data.removeFileElement).removeClass('hidden');
                    $(data.removeFileElement).addClass('hidden');
                },
                processfail: function (e, data) {
                    $(data.progressElement).addClass('hidden');
                    if (data.files[data.index].error) {
                        showGlobalNotification('error', data.files[data.index].error);
                    }
                },
                send: function (e, data) {
                    $('#loader').show();
                    return true;
                },
                done: function (e, data) {
                    $('#contact_list_file_path').val(data.result);
                    $(data.feedbackElement).text('File uploaded');
                    $(data.removeFileElement).removeClass('hidden');
                },
                always: function (e, data) {
                    $('#loader').hide();
                },
                progressall: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $(data.progressElement).find('.progress-bar').first().css('width', progress + '%')
                }
            };
            $('#file_input').fileupload(fileUploadOptions);
            $(document).on('click', '#btn_remove_file', function (e) {
                $('#contact_list_file_path').val('');
                $(fileUploadOptions.feedbackElement).text('');
                $(this).addClass('hidden');
            });
        });
    </script>
}

<script type="text/javascript">
    var $form = $('#plain_text_contact_list_form');
    $form.on('change', '.radio-dnc', function (e) {
        debugger;
        $('#contact_list_file_path', $form).val('');
        var radioButton = $('#file_mode', $form).val($(this).val());
        if (radioButton.val() == 1)
        {
            if ($('.upload-file').hasClass('hidden'))
                $('.upload-file').removeClass('hidden')
            if (!$('.file-path').hasClass('hidden'))
                $('.file-path').addClass('hidden')
        }
        if (radioButton.val() == 2)
        {
            if ($('.file-path').hasClass('hidden'))
                $('.file-path').removeClass('hidden')
            if (!$('.upload-file').hasClass('hidden'))
                $('.upload-file').addClass('hidden')
        }

    });
    var headerUrl = $form.attr('data-header-url');

    $(document).on('change', '.header-check', function (e) {
        var target = $(this).attr('data-target');
        $(target).val($(this).is(':checked'));
    });
    $(document).off('click', '#btn_next');
    $(document).on('click', '#btn_next', function (e) {
        var $button = $(this);
        var tempContactList = {
            HeadersOnly: true,
            Id: $('#contact_list_id', $form).val(),
            SourceId: $('#contact_list_source', $form).val(),
            Name: $('#contact_list_name', $form).val(),
            Purpose: $('#contact_list_purpose', $form).val(),
            ContainsHeaders: $('#contact_list_contains_headers', $form).val(),
            Delimiter: $('#contact_list_delimiter', $form).val(),
            FilePath: $('#contact_list_file_path', $form).val()
        };
        $.ajax({
            url: headerUrl,
            beforeSend: function () {
                if (tempContactList.SourceId == null || tempContactList.SourceId == '') {
                    showGlobalNotification('error', '@ContactList.ERROR_SELECT_SOURCE');
                    return false;
                }
                if (tempContactList.Name == '' || tempContactList.Name == null) {
                    showGlobalNotification('error', '@ContactList.ERROR_CONTACT_LIST_NAME');
                    $('#contact_list_name', $form).focus();
                    return false;
                }
                if (tempContactList.Name.length < 3) {
                    showGlobalNotification('error', '@ContactList.ERROR_CONTACT_LIST_NAME_LENGTH');
                    $('#contact_list_name', $form).focus();
                    return false;
                }
                if (!$('.purpose-check', $form).is(':checked')) {
                    showGlobalNotification('error', 'Please choose a purpose for the contact list');
                    return false;
                }
                if (tempContactList.Delimiter == 0 || tempContactList.Delimiter == '' || tempContactList.Delimiter == null) {
                    showGlobalNotification('error', '@ContactList.ERROR_SELECT_DELIMITER');
                    $('#contact_list_delimiter', $form).focus();
                    return false;
                }
                if (tempContactList.FilePath == '' || tempContactList.FilePath == null) {
                    showGlobalNotification('error', '@ContactList.ERROR_PROVIDE_FILEPATH');
                    return false;
                }
                $('#loader').show();
            },
            success: function (response) {
                var selectElements = $('.filter-condition-attribute', $form);
                $(selectElements).html('');
                $(selectElements).append("<option value=''>Select</option>");
                $('#contact_list_sort_by').html('');
                $('#contact_list_sort_by').append("<option value=''>Select</option>");
                $.each(response, function (index, header) {
                    $(selectElements).append('<option value="' + header.Value + '">' + header.Key + '</option>');
                    $('#contact_list_sort_by').append('<option value="' + header.Value + '">' + header.Key + '</option>');
                });

                if (tempContactList.Id) {
                    $(selectElements).each(function () {
                        if ($(this).attr('data-selected-attribute'))
                            $(this).val($(this).attr('data-selected-attribute'));
                    });
                    $('#contact_list_sort_by', $form).val($('#contact_list_sort_by').attr('data-selected-field'));
                }

                $('#step_one', $form).addClass('hidden');
                $('#step_two', $form).removeClass('hidden');
                $('#btn_prev', $form).removeClass('hidden');
                $button.addClass('hidden');
                $('#btn_save', $form).removeClass('hidden');
                $('#loader').hide();
            },
            type: 'POST',
            dataType: 'json',
            contentType: 'application/json',
            error: globalAjaxErrorHandler,
            data: JSON.stringify(tempContactList)
        });
    });
    $(document).on('click', '#btn_prev', function (e) {
        $('#step_one', $form).removeClass('hidden');
        $('#step_two', $form).addClass('hidden');
        $('#btn_next', $form).removeClass('hidden');
        $(this).addClass('hidden');
        $('#btn_save', $form).addClass('hidden');
    });

    $form.on('submit', function (e) {
        e.preventDefault();

        var url = $(this).attr('action');
        var filterCollection = [];

        var filters = $('.unicampaign-filter > .filter-collection > .filter-expression', $form);

        for (var i = 0; i < filters.length; i++) {
            var theFilter = contactListUtil.parseFilter($(filters[i]));
            if (theFilter) {
                filterCollection.push(theFilter);
            }
        }

        var theContactList = {
            Id: $('#contact_list_id', $form).val(),
            SourceId: $('#contact_list_source', $form).val(),
            Name: $('#contact_list_name', $form).val(),
            Purpose: $('#contact_list_purpose', $form).val(),
            ContainsHeaders: $('#contact_list_contains_headers', $form).val(),
            Delimiter: $('#contact_list_delimiter', $form).val(),
            FilePath: $('#contact_list_file_path', $form).val(),
            Filters: filterCollection
        };
        theContactList.SortBy = $('#contact_list_sort_by', $form).val();
        theContactList.SortDirection = $('#contact_list_sort_direction', $form).val();
        if ($('#contact_list_sort_by', $form).prop('selectedIndex') <= 0) {
            debugger;
            delete theContactList.SortBy;
            delete theContactList.SortDirection;
        }
        console.log(theContactList);
        $.ajax({
            beforeSend: function (e) {
                $('#loader').show();
            },
            url: url,
            success: globalAjaxSuccessHandler,
            type: 'POST',
            contentType: 'application/json',
            error: globalAjaxErrorHandler,
            data: JSON.stringify(theContactList)
        });
        return false;
    });
</script>