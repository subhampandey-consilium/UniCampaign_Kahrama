@using UniCampaignE.Web.Localization
@model Dictionary<string, string>
<div class="modal-dialog modal-lg">
    <div class="modal-content">
        <div class="modal-header bg-primary-dark">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">@ViewBag.ModalTitle</h4>
        </div>
        <div class="modal-body">
            <dciv class="row">
                <div class="form-horizontal col-lg-7">
                    <div class="form-group">
                        <label class="control-label col-xs-4">Select Campaign </label>
                        <div class="col-lg-7 col-xs-8">
                            @Html.DropDownList("CampaignMap", Model.Select(map => new SelectListItem() { Text = map.Value, Value = map.Key }), "Select", new { @class = "form-control", id = "map_select" })
                        </div>
                    </div>
                </div>
                <div data-toggle="buttons" class="btn-group col-lg-3" id="history_display_options">
                    <label class="btn btn-primary active" data-type="grid">
                        <input name="chart_type_option" value="grid" type="radio"><i class="fa fa-table fa-lg"></i>
                    </label>
                    <label class="btn btn-primary" data-type="pie">
                        <input name="chart_type_option" value="pie" type="radio"><i class="fa fa-pie-chart fa-lg"></i>
                    </label>
                    <label class="btn btn-primary" data-type="bar">
                        <input name="chart_type_option" value="bar" type="radio"><i class="fa fa-bar-chart-o fa-lg"></i>
                    </label>
                </div>
                <div class="col-lg-1">
                    <a class="btn btn-primary" target="_blank" id="details_link" href="@Url.RouteUrl(new { area="",controller="MultipleMap",action=nameof(UniCampaignE.Web.Controllers.MultipleMapController.ImportDetails), id = ViewBag.CampaignId,name = ViewBag.CampaignName ,mapId= ViewBag.MapId })">
                        More Details
                    </a>
                </div>

            </dciv>
            <div class="row">
                <div class="col-lg-12 hidden" id="history_chart_contianer">
                    <div id="history_chart">

                    </div>
                </div>
                <div class="col-lg-12 hidden" id="history_grid_container">
                    <div class="table-responsive">
                        <table id="history_grid" class="table table-striped table-bordered table-condensed"></table>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer"></div>
    </div>
</div>
<script type="text/javascript">
    debugger;
    var gridSettings = {
        primaryKey: 'Id',
        iconsLibrary: 'fontawesome',
        columns: [
            { field: "AttemptedOn", title: "@GridComman.GRID_DATETIME_FORMAT" },
            { field: 'TotalRecords', title: '@Campaign.GRID_TOTAL_RECORDS', minWidth: 60, priority: 6 },
            { field: "RecordsImported", title: "@Campaign.GRID_RECORDS_IMPORTED", priority: 8 },
            { field: "InvalidRecords", title: "@Campaign.GRID_INVALID_RECORDS", minWidth: 50, priority: 4 },
            { field: "DuplicatesFiltered", title: "@Campaign.GRID_DUPLICATES_FILTERED", minWidth: 30, priority: 5 },
            { field: "DNCFiltered", title: "Excluded", minWidth: 30, priority: 7 },
            { field: "Status", title: "Status", minWidth: 50, priority: 5 }
        ],
        uiLibrary: "bootstrap",
        notFoundText: "@GridComman.GRID_NO_RECORD_FOUND",
        pager: { enable: true, limit: 5, sizes: [5, 10] }
    };
    var MapId=@ViewBag.MapId;
    var historyChart, historyGrid;
    $('#map_select').select2({ width: '100%', language: '@System.Globalization.CultureInfo.CurrentCulture.Name', placeholder: '@Campaign.SELECT_A_LIST_TEXT', theme: 'bootstrap' }).on('change', function (e) {
        debugger;
        
        if (historyChart !== undefined) {
            historyChart.unload();
            historyChart = undefined;
        }
        var displayOption = $('#history_display_options').find('.active').first().attr('data-type');
        displayData(displayOption, $(this).val());
    });
    $('#history_display_options').on('click', '.btn', function (e) {
        debugger;
        var displayOption = $(this).attr('data-type');
        var campaignId = $('#map_select').val();
        if (campaignId != '') {
            displayData(displayOption, campaignId);
        }
    });  
    function displayData(displayOption, campaignId) {
        debugger;
        if (displayOption == 'grid') {
            if ($('#history_grid_container').hasClass('hidden')) {
                $('#history_grid_container').removeClass('hidden');
            }
            if (!$('#history_chart_contianer').hasClass('hidden')) {
                $('#history_chart_contianer').addClass('hidden');
            }
            if (historyChart !== undefined) {
                historyChart.unload();
                historyChart = undefined;
            }
            var dataSource = {
                url: '@Url.Action(nameof(UniCampaignE.Web.Controllers.MultipleMapController.AssignedLists),new { area="",controller= "MultipleMap" })',
                data: {
                    campaignId: campaignId,
                    mapId: MapId
                }
            };
            gridSettings.dataSource = dataSource;
            $('#history_grid').grid('destroy', true, true);
            historyGrid = $('#history_grid').grid(gridSettings);
        } else {
            if ($('#history_chart_contianer').hasClass('hidden')) {
                $('#history_chart_contianer').removeClass('hidden');
            }
            if (!$('#history_grid_container').hasClass('hidden')) {
                $('#history_grid_container').addClass('hidden');
            }
            var chartOptions = {};
            chartOptions.size = { height: '300', width: '450' };
            chartOptions.bindto = '#history_chart';
            chartOptions.axis = {
                x: {
                    type: 'timeseries',
                    tick: {
                        format: '%d-%m-%Y %H:%M'
                    }
                }
            };
            chartOptions.onrendered = function () {
                console.log(this);
            };
            chartOptions.tooltip = { position: function () { return { top: 0, left: 0 }; } };
            chartOptions.data = {
                labels: true,
                url: '@Url.Action(nameof(UniCampaignE.Web.Controllers.MultipleMapController.AssignedLists),new { paginate=false,area="",controller= "MultipleMap" })' + '&mapId=' + MapId +'&campaignId=' + campaignId,
                mimeType: 'json',
                keys: { x: 'AttemptedOn', value: ['DuplicatesFiltered', 'DNCFiltered', 'RecordsImported', 'InvalidRecords'] },
                type: displayOption,
                xFormat: '%d-%m-%Y %H:%M',
                empty: {
                    label: {
                        text: "@Campaign.NO_DATA_TEXT"
                    }
                },
                names: {
                    InvalidRecords: 'Invalid',
                    RecordsImported: 'Imported',
                    DNCFiltered: 'Excluded',
                    DuplicatesFiltered: 'Duplicates'
                }
            };
            chartOptions.legend = { position: 'right' };
            if (historyChart === undefined) {
                historyChart = c3.generate(chartOptions);
            } else {
                historyChart.transform(displayOption);
            }
        }
    }

</script>
