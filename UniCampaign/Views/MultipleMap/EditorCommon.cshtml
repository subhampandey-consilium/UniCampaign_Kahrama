@using UniCampaignE.Web.Localization
@model UniCampaignE.Core.Models.AbstractContactList

<div class="form-group">
    <label class="control-label col-xs-4">@ContactList.SELECT_SOURCE<span class="error inline">*</span></label>
    <div class="col-xs-8 col-lg-7">
        @Html.HiddenFor(mod => mod.Id, new { id = "contact_list_id" })
        @Html.DropDownListFor(mod => mod.Source.Id, new List<SelectListItem>(), new { @class = "form-control", id = "contact_list_source", data_source_id = Model?.Source.Id, data_source_name = Model?.Source.Name, data_source_type = ViewBag.SourceType })
    </div>
    <div class="clearfix"></div>
</div>
<div class="form-group">
    <label class="control-label col-xs-4">@ContactList.NAME<span class="error inline">*</span></label>
    <div class="col-xs-8 col-lg-7">
        @Html.TextBoxFor(mod => mod.Name, new { @class = "form-control", id = "contact_list_name" })
    </div>
    <div class="clearfix"></div>
</div>
<div class="form-group">
    <label class="control-label col-xs-4">Purpose<span class="error inline">*</span></label>
    <div class="col-xs-8 col-lg-7 input-group pl-lg">
        @Html.HiddenFor(mod => mod.Purpose, new { @id = "contact_list_purpose" })
        <div class="c-checkbox checkbox-inline">
            <label>
                <input type="checkbox" value="@UniCampaignE.Core.Constants.ListPurpose.Voice" class="purpose-check" data-target="#contact_list_purpose" @{var isVoice = Model != null && Model.Purpose.HasFlag(UniCampaignE.Core.Constants.ListPurpose.Voice) ? "checked='checked'" : string.Empty; @isVoice                                                    } />
                <span class="fa fa-check"></span>Voice
            </label>
        </div>
        @*  <div class="c-checkbox checkbox-inline">
        <label>
            <input type="checkbox" value="@UniCampaignE.Core.Constants.ListPurpose.Email" class="purpose-check" data-target="#contact_list_purpose" @{var isEmail = Model != null && Model.Purpose.HasFlag(UniCampaignE.Core.Constants.ListPurpose.Email) ? "checked='checked'" : string.Empty; @isEmail                                                    } />
            <span class="fa fa-check"></span>Email
        </label>
    </div>
    <div class="c-checkbox checkbox-inline">
        <label>
            <input type="checkbox" class="purpose-check" value="@UniCampaignE.Core.Constants.ListPurpose.SMS" data-target="#contact_list_purpose" @{var isSMS = Model != null && Model.Purpose.HasFlag(UniCampaignE.Core.Constants.ListPurpose.SMS) ? "checked='checked'" : string.Empty; @isSMS                                                    } />
            <span class="fa fa-check"></span>SMS
        </label>
    </div>*@
      
    </div>
    <div class="clearfix"></div>
</div>
<script>
    var sourceId, sourceName;
    sourceId = $('#contact_list_source').attr('data-source-id');
    sourceName = $('#contact_list_source').attr('data-source-name');

    var sourceType = $('#contact_list_source').attr('data-source-type');
    $(document).ready(function () {
        $(document).on('change', '.purpose-check', function (e) {
            var purpose = '';
            $('.purpose-check').each(function () {
                if ($(this).is(':checked')) {
                    purpose += $(this).val();
                    purpose += " , ";
                }
            });
            var lastIndex = purpose.lastIndexOf(',');
            purpose = purpose.substr(0, lastIndex).trim();
            var id = $(this).attr('data-target');
            $(id).val(purpose);
        });
        var sourceOptions = {
            language: '@System.Globalization.CultureInfo.CurrentCulture.Name',
            placeholder: '@ContactList.SELECT_SOURCE_PLACE_HOLDER',
            width: '100%',
            theme: 'bootstrap',
            multiple: false,
            ajax: {
                cache: true,
                dataType: 'json',
                url: function (params) {
                    var url = '@Url.Action(nameof(UniCampaignE.Web.Controllers.SourceController.ListSources), new { area = "", controller = nameof(UniCampaignE.Web.Controllers.SourceController).Replace("Controller", "") })';
                    var q = "";
                    var page = params.page || 1;
                    var type = sourceType;
                    q = 'page=' + page
                    q += '&limit=10';
                    q += '&type=' + type;
                    if (params.term) {
                        q += '&searchString=' + encodeURIComponent(params.term);
                    }
                    url += "?" + q;
                    return url;
                },
                processResults: function (data, params) {
                    var obj = {};
                    obj.results = data.records.map(function (item) {
                        return {
                            id: item.Id,
                            text: item.Name
                        }
                    });
                    if (!params.page) {
                        params.page = 1;
                    }
                    obj.pagination = {
                        more: (10 * params.page) < data.total
                    }
                    return obj;
                }
            },
            escapeMarkup: function (markup) { return markup; },
            closeOnSelect: true,
            dropdownParent: $('#modal_editor'),
            minimumResultsForSearch: 0
        };
        $('#contact_list_source').select2(sourceOptions);
        if (sourceId !== undefined && sourceName !== undefined) {
            var option = $('<option selected></option>').val(0);
            $(option).text(sourceName).val(sourceId);
            $('#contact_list_source').append(option).trigger('change');
        }
    });
</script>
